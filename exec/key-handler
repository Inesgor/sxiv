#!/bin/sh

# Key handler for sxiv, the idea is to use the mark binding built in and then make and action

saved="$HOME/Media/Pictures/Saved"
alias xs="xsel -l /dev/null"

while read file
do
case "$1" in
        "w")	# if the zoom if greater than 100 w fits the image
		setbg "$file" & ;;
        "v")
		[ -z "$dirs" ] && dirs="$(echo "~/Media/Pictures/Wallpapers\n~/Docs\n~/Media\n~/Downloads" | dmenu -l 5 -i -p "Move file(s) to where?"  | sed "s|~|$HOME|g")"
		[ -z "$dirs" ] && exit
		[ ! -d "$dirs" ] && notify-send "$dirs is not a directory, cancelled." && exit
		#mv "$file" "$dirs" && notify-send -i "$dirs/$(echo "$file" | sed 's/^..//')" "üöö File moved" "$(noextname "$file") moved to $(echo "$dirs" | sed "s|$HOME|~|g")" &
		mv "$file" "$dirs" && notify-send -i "$dirs/$(noextname -f "$file")" "üöö File moved" "$(noextname "$file") moved to $(echo "$dirs" | sed "s|$HOME|~|g")" &
		#xdotool key r		# reload sxiv
		xdotool key control+R	# reload sxiv
		;;
	"s")

		[ ! -d "$saved" ] && notify-send "$saved is not a directory, cancelled." && exit
		[ "$PWD" = "$saved" ] && notify-send "You are on the SAVED DIRü§¶" && exit
		mv "$file" "$saved" && notify-send "Successfully savedüåü" "$(basename "$file")‚úÖ"  &
		;;
	"2")
		notify-send " hi $PWD" ;;
	"c")
		name=$(dmenu -i -p "New name:")
		[ -z "$name" ] && exit
		[ -f $name.$(noextname -e "$file") ] && notify-send "There's already a file with that nameüò†" && exit
		mv "$file" "$name.${file##*.}" && notify-send "'$(noextname -b "$file")' renamedüìù to '$name'" &
		;;
	"r")
		convert -rotate 90 "$file" "$file" ;;
	"R")
		convert -rotate -90 "$file" "$file" ;;
	"U")
		convert -rotate 180 "$file" "$file" ;;

	"4")
		convert -flop "$file" "$file" ;;
	"y")
		#echo -n "$file" | sed 's/^..//' | tr -d '\n' | xclip -selection clipboard &&
		echo -n "$file" | sed 's/^..//' | tr -d '\n' | xs &&
			notify-send -t 500 "$(basename "$file") copied to clipboardüìã" & ;;
	"p")
		#readlink -f "$file" | tr -d '\n' | xclip -selection clipboard &&
		readlink -f "$file" | tr -d '\n' | xs &&
		notify-send "$(readlink -f "$file") copied to clipboardüìã" & ;;
	"d")
		[ "$(printf "Yes\\nNo" | dmenu -i -p "Really delete $file?")" = "Yes" ] && rm "$file" && notify-send "$file deleted.‚ùå" ;;
	"6")
		setsid -f gimp "$file" & notify-send "Opening on gimp...‚úèÔ∏è üñºÔ∏è" ;;
	#"apostrophe")
	"semicolon")
		notify-send "File information‚ÑπÔ∏è " "$(mediainfo --Output=file://$HOME/.local/Templates/mediainfo "$file")" ;;
        esac
done
	#mv "$file" "$name" && notify-send -i "$(readlink -f "$file")" "$file renamed to $name" &
	#"${file%.*}
	#mv "$file" "$destdir" && notify-send -i "$(readlink -f "$file")" "$file moved to $destdir." &
# "C")
#		[ -z "$destdir" ] && destdir="$(sed "s/\s.*#.*$//;/^\s*$/d" ${XDG_CONFIG_HOME:-$HOME/.config}/shell/bm-dirs | awk '{print $2}' | dmenu -l 20 -i -p "Copy file(s) to where?" | sed "s|~|$HOME|g")"
#		[ ! -d "$destdir" ] && notify-send "$destdir is not a directory, cancelled." && exit
#		cp "$file" "$destdir" && notify-send -i "$(readlink -f "$file")" "$file copied to $destdir." &
#		;;
#
