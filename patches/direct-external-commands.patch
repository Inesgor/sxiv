
@@ +586 @@ void run_key_handler(const char *key, unsigned int mask)
-void on_keypress(XKeyEvent *kev)
-{
-	int i;
-	unsigned int sh = 0;
-	KeySym ksym, shksym;
-	char dummy, key;
-	bool dirty = false;
-
-	XLookupString(kev, &key, 1, &ksym, NULL);
-
-	if (kev->state & ShiftMask) {
-		kev->state &= ~ShiftMask;
-		XLookupString(kev, &dummy, 1, &shksym, NULL);
-		kev->state |= ShiftMask;
-		if (ksym != shksym)
-			sh = ShiftMask;
-	}
-	if (IsModifierKey(ksym))
-		return;
-	else if (extprefix) {
-		run_key_handler(XKeysymToString(ksym), kev->state & ~sh);
-		extprefix = False;
-	} else if (key >= '0' && key <= '9') {
-		/* number prefix for commands */
-		prefix = prefix * 10 + (int) (key - '0');
-		return;
-	} else for (i = 0; i < ARRLEN(keys); i++) {
-		if (keys[i].ksym == ksym &&
-		    MODMASK(keys[i].mask | sh) == MODMASK(kev->state) &&
-		    keys[i].cmd >= 0 && keys[i].cmd < CMD_COUNT &&
-		    (cmds[keys[i].cmd].mode < 0 || cmds[keys[i].cmd].mode == mode))
-		{
-			if (cmds[keys[i].cmd].func(keys[i].arg))
-				dirty = true;
-		}
-	}
-	if (dirty)
-		redraw();
-	prefix = 0;
-}
+void on_keypress(XKeyEvent *kev)
+{
+	int i;
+	unsigned int sh = 0;
+	KeySym ksym, shksym;
+	char dummy, key;
+	bool dirty = false;
+
+	XLookupString(kev, &key, 1, &ksym, NULL);
+
+	if (kev->state & ShiftMask) {
+		kev->state &= ~ShiftMask;
+		XLookupString(kev, &dummy, 1, &shksym, NULL);
+		kev->state |= ShiftMask;
+		if (ksym != shksym)
+			sh = ShiftMask;
+	}
+	if (IsModifierKey(ksym))
+		return;
+
+	if (ksym == XK_Escape && MODMASK(kev->state) == 0){
+		inputting_prefix = true;
+		prefix = 0;
+		return;
+	}
+
+	if ((inputting_prefix == true) && (key >= '0' && key <= '9'))
+	{
+		/* number prefix for commands */
+		prefix = prefix * 10 + (int) (key - '0');
+		return;
+	} else for (i = 0; i < ARRLEN(keys); i++) {
+                if ((dirty == true) && (keys[i].ksym == 0))
+			break;
+
+		if (keys[i].ksym == ksym &&
+		    MODMASK(keys[i].mask | sh) == MODMASK(kev->state) &&
+		    keys[i].cmd >= 0 && keys[i].cmd < CMD_COUNT &&
+		    (cmds[keys[i].cmd].mode < 0 || cmds[keys[i].cmd].mode == mode))
+		{
+			if (cmds[keys[i].cmd].func(keys[i].arg))
+				dirty = true;
+		}
+	}
+
+	if (i == ARRLEN(keys) && (!dirty))
+		run_key_handler(XKeysymToString(ksym), kev->state & ~sh);
+
+	if (dirty)
+		redraw();
+
+	prefix = 0;
+	inputting_prefix = 0;
+}
