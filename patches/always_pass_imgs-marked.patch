From b91abd47bc51dae188abe48365b19237eaaa8b5a Mon Sep 17 00:00:00 2001
From: lolilolicon <lolilolicon@gmail.com>
Date: Mon, 17 Oct 2016 12:34:56 +0800
Subject: [PATCH] Always pass marked images to stdin of key-handler

This simplifies the logic, and removes ambiguity WRT what is passed.
The current image is always passed as the second argument.

It's no more required to switch to thumbnail mode, and therefore to
trigger caching, in order to pass the list of marked images.


I did the same thing changing one line, is this one safer in some way?
It's not what I need, it needs an image to be marked even if you are
want to make an action on only one image(without mark keyhandler doesnt
work)
---
 exec/key-handler |  6 +++---
 main.c           | 18 +++++++++---------
 sxiv.1           |  6 +++---
 3 files changed, 15 insertions(+), 15 deletions(-)

diff --git a/main.c b/main.c
index d1813a5..413b4ec 100644
--- a/main.c
+++ b/main.c
@@ -462,10 +462,8 @@ void run_key_handler(const char *key, unsigned int mask)
 {
 	pid_t pid;
 	FILE *pfs;
-	bool marked = mode == MODE_THUMB && markcnt > 0;
 	bool changed = false;
 	int f, i, pfd[2], status;
-	int fcnt = marked ? markcnt : 1;
 	char kstr[32];
 	struct stat *oldst, st;

@@ -488,7 +486,7 @@ void run_key_handler(const char *key, unsigned int mask)
 		close(pfd[0]), close(pfd[1]);
 		return;
 	}
-	oldst = emalloc(fcnt * sizeof(*oldst));
+	oldst = emalloc(markcnt * sizeof(*oldst));

 	strncpy(win.bar.l.buf, "Running key handler...", win.bar.l.size);
 	win_draw(&win);
@@ -502,7 +500,7 @@ void run_key_handler(const char *key, unsigned int mask)
 	if ((pid = fork()) == 0) {
 		close(pfd[1]);
 		dup2(pfd[0], 0);
-		execl(keyhandler.f.cmd, keyhandler.f.cmd, kstr, NULL);
+		execl(keyhandler.f.cmd, keyhandler.f.cmd, kstr, files[fileidx].path, NULL);
 		error(EXIT_FAILURE, errno, "exec: %s", keyhandler.f.cmd);
 	}
 	close(pfd[0]);
@@ -512,8 +510,8 @@ void run_key_handler(const char *key, unsigned int mask)
 		goto end;
 	}

-	for (f = i = 0; f < fcnt; i++) {
-		if ((marked && (files[i].flags & FF_MARK)) || (!marked && i == fileidx)) {
+	for (f = i = 0; f < markcnt; i++) {
+		if (files[i].flags & FF_MARK) {
 			stat(files[i].path, &oldst[f]);
 			fprintf(pfs, "%s\n", files[i].path);
 			f++;
@@ -524,8 +522,8 @@ void run_key_handler(const char *key, unsigned int mask)
 	if (!WIFEXITED(status) || WEXITSTATUS(status) != 0)
 		error(0, 0, "%s: Exited abnormally", keyhandler.f.cmd);

-	for (f = i = 0; f < fcnt; i++) {
-		if ((marked && (files[i].flags & FF_MARK)) || (!marked && i == fileidx)) {
+	for (f = i = 0; f < markcnt; i++) {
+		if (files[i].flags & FF_MARK || i == fileidx) {
 			if (stat(files[i].path, &st) != 0 ||
 				  memcmp(&oldst[f].st_mtime, &st.st_mtime, sizeof(st.st_mtime)) != 0)
 			{
@@ -535,7 +533,9 @@ void run_key_handler(const char *key, unsigned int mask)
 				}
 				changed = true;
 			}
-			f++;
+			if (files[i].flags & FF_MARK) {
+				f++;
+			}
 		}
 	}
 end:
diff --git a/sxiv.1 b/sxiv.1
index 0e1485b..c6b4614 100644
--- a/sxiv.1
+++ b/sxiv.1
@@ -377,9 +377,9 @@ located in
 .IR $XDG_CONFIG_HOME/sxiv/exec/key-handler .
 The handler is invoked by pressing
 .BR Ctrl-x .
-The next key combo is passed as its first argument. Passed via stdin are the
-images to act upon, one path per line: all marked images, if in thumbnail mode
-and at least one image has been marked, otherwise the current image.
+The next key combo is passed as its first argument. The path to the current
+image is passed as its second argument. The paths to all marked images are
+passed via stdin, one per line.
 sxiv(1) will block until the handler terminates. It then checks which images
 have been modified and reloads them.

